# .github/workflows/deploy-storybook.yml
name: Deploy Storybook

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy-storybook:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Storybook
        run: pnpm --filter nmc-storybook.v1 run build

      - name: Sync Storybook to server
        uses: Burnett01/rsync-deployments@7.0.2
        with:
          switches: -az --delete --chmod=Du=rwx,Fu=rw,go=rx
          path: packages/nmc-storybook.v1/storybook-static/
          remote_host: ${{ secrets.SERVER_IP }}
          remote_user: ${{ secrets.SERVER_USER }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}
          remote_path: /var/www/storybook/

      - name: Deploy and restart services
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/nmc-core.v1
            echo "Pulling latest changes..."
            git pull origin main
            
            echo "Stopping existing services..."
            docker-compose down --remove-orphans
            
            echo "Removing old images..."
            docker image prune -f
            
            echo "Starting services..."
            docker-compose up -d --build
            
            echo "Waiting for services to be healthy..."
            timeout=60
            while [ $timeout -gt 0 ]; do
              if docker-compose ps | grep -q "healthy"; then
                echo "Services are healthy!"
                break
              fi
              echo "Waiting for services to start... ($timeout seconds remaining)"
              sleep 5
              timeout=$((timeout-5))
            done
            
            if [ $timeout -le 0 ]; then
              echo "Services failed to start within timeout"
              docker-compose logs
              exit 1
            fi
            
            echo "Deployment completed successfully!"
            docker-compose ps
