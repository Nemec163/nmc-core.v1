@use '../../nmc-ui.v1/src/styles/tools/toUnit' as *;
@use '../../nmc-ui.v1/src/styles/animations' as animations;
@use '../../nmc-ui.v1/src/styles/mixins/neumorphic' as neumorphic;


:global(.nmc-ui) {
  &:not(:global(.flat-light)):not(:global(.flat-dark)) {
    background-color: var(--background);

    .page{
      background-color: var(--background-in);
      box-shadow: var(--shadow);
  
      .docs{
        h2{
          color: var(--text-primary);
        }
  
        .category{
          @include neumorphic.neumorphic-flat;
    
          h3{
            @include neumorphic.text-glow;
          }
    
          .variable{
            code{
              @include neumorphic.neumorphic-in;
            }
          }
        }
      }
    }
  }

  &:global(.flat-light), 
  &:global(.flat-dark) {
    .page{
      background-color: var(--text-primary);
      box-shadow: none;
  
      .docs{
        h2{
          color: var(--background);
        }
      }
    }
  }
}

.page {
  min-height: 100svh;
  height: 100%;
  padding: var(--spacing-xl);
  background-color: var(--background);

  .docs {
    margin: var(--spacing-md) 0 0 0;
    border-radius: var(--border-radius-md);
    background-color: var(--background-in);
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
    
    h2 {
      font-size: var(--heading-lg);
      color: var(--text-primary);
    }
    
    .category {
      padding: var(--spacing-md);
      border-radius: var(--border-radius-md);
      background-color: var(--background);
      
      h3 {
        font-size: var(--heading-sm);
        color: var(--text-primary);
        padding-bottom: var(--spacing-sm);
      }
      
      .variables {
        display: grid;
        grid-template-columns: repeat(auto-fill, toUnit(140px));
        gap: var(--spacing-md);
        border-top: 1px solid var(--border-color);
        padding: var(--spacing-md) 0 0;
      }
  
      .typographyGrid {
        grid-template-columns: repeat(auto-fill, toUnit(170px));
      }
      
      .animationsGrid {
        grid-template-columns: repeat(auto-fill, toUnit(130px));
      }
      
      .variable {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: flex-end;
        
        code {
          font-size: var(--font-size-xs);
          padding: var(--spacing-xs) var(--spacing-sm);
          background-color: var(--background);
          border-radius: var(--border-radius-sm);
          color: var(--text-secondary);
          justify-content: space-between;
          margin-top: var(--spacing-md);
          width: 100%;
          border: 1px solid var(--border-color);
          display: flex;
          flex-direction: column;
          align-items: center;

          span{
            color: inherit;
            font-size: inherit;
          }
        }
      }
    }
    
    .square {
      background-color: var(--text-primary);
      border-radius: var(--border-radius-sm);
      margin-bottom: var(--spacing-sm);
    }
    
    .sizeXS { 
      width: var(--spacing-xs);
      height: var(--spacing-xs);
    }
    .sizeSM { 
      width: var(--spacing-sm);
      height: var(--spacing-sm);
    }
    .sizeMD { 
      width: var(--spacing-md);
      height: var(--spacing-md);
    }
    .sizeLG { 
      width: var(--spacing-lg);
      height: var(--spacing-lg);
    }
    .sizeXL { 
      width: var(--spacing-xl);
      height: var(--spacing-xl);
    }
    
    .radius {
      width: var(--spacing-lg);
      height: var(--spacing-lg);
      background-color: var(--text-primary);
      margin-bottom: var(--spacing-sm);
      
      &.radiusSM { border-radius: var(--border-radius-sm); }
      &.radiusMD { border-radius: var(--border-radius-md); }
      &.radiusLG { border-radius: var(--border-radius-lg); }
      &.radiusXL { border-radius: var(--border-radius-xl); }
    }
    
    .color {
      width: var(--spacing-lg);
      height: var(--spacing-lg);
      border-radius: 50%;
      border: 1px solid var(--border-color);
      box-shadow: var(--shadow);
      margin-bottom: var(--spacing-sm);
      
      &.background { background-color: var(--background); }
      &.backgroundIn { 
        background-image: var(--background-in);
        background-size: 100% 100%;
      }
      &.backgroundOut { 
        background-image: var(--background-out);
        background-size: 100% 100%;
      }
      &.borderColor { background-color: var(--border-color); }
      &.textPrimary { background-color: var(--text-primary); }
      &.textSecondary { background-color: var(--text-secondary); }
      &.textAccent { background-color: var(--text-accent); }
      &.textGlow { background-color: var(--text-glow); }
      &.textGlowBright { background-color: var(--text-glow-bright); }
      &.textGlowBrightest { background-color: var(--text-glow-brightest); }
    }
    
    // Shadow & effects examples
    .shadowExample {
      width: var(--spacing-xl);
      height: var(--spacing-xl);
      border-radius: var(--border-radius-md);
      margin-bottom: var(--spacing-sm);
      position: relative;
      
      &::before {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        font-size: var(--font-size-xs);
        color: var(--text-primary);
      }
        &.shadowNormal { 
        background-color: var(--background);
        box-shadow: var(--shadow);
        
        &::before {
          content: 'Out';
        }
      }
      
      &.shadowIn { 
        background-color: var(--background);
        box-shadow: var(--shadow-in);
        
        &::before {
          content: 'In';
        }
      }
      
      &.shadowGlow { 
        background-color: var(--background);
        box-shadow: var(--shadow-glow);
        
        &::before {
          content: 'Glow';
        }
      }
    }
    
    .font {
      display: block;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      width: 100%;
      text-align: center;
      margin-bottom: var(--spacing-sm);
      
      &.fontSizeXs { font-size: var(--font-size-xs); }
      &.fontSizeSm { font-size: var(--font-size-sm); }
      &.fontSizeMd { font-size: var(--font-size-md); }
      &.fontSizeLg { font-size: var(--font-size-lg); }
      &.headingSm { font-size: var(--heading-sm); }
      &.headingMd { font-size: var(--heading-md); }
      &.headingLg { font-size: var(--heading-lg); }
    }
    
    .animation {
      display: flex;
      justify-content: center;
      align-items: center;
      height: toUnit(50px);
      width: 100%;
      position: relative;
      margin-bottom: var(--spacing-sm);
      
      .animationContent {
        display: inline-block;
        font-size: var(--font-size-lg);
        color: var(--text-glow);
      }
      
      .glowElementBox {
        width: var(--spacing-md);
        height: var(--spacing-md);
        border-radius: var(--border-radius-xl);
      }
      
      &.glowTextActive {
        @include neumorphic.setup-glow-variables;
  
        .animationContent {
          @include animations.glow-text(3s, ease-in-out);
        }
      }
      
      &.glowElementActive {
        @include neumorphic.setup-glow-variables;
  
        .glowElementBox {
          @include animations.glow-element(3s, ease-in-out);
          background: var(--text-glow-bright);
        }
      }
      
      &.rotateActive {
        .animationContent {
          @include animations.rotate(2s, linear);
        }
      }
      
      &.breatheActive {
        .animationContent {
          @include animations.breathe(4s, ease-in-out);
        }
      }
      
      &.blinkActive {
        .animationContent {
          @include animations.blink(1.5s);
        }
      }
    }
    
    .lineHeight {
      width: var(--spacing-xl);
      background-color: var(--text-primary);
      margin-bottom: var(--spacing-sm);
      position: relative;
      
      &.lineHeightSm { height: var(--line-height-sm); }
      &.lineHeightMd { height: var(--line-height-md); }
      &.lineHeightLg { height: var(--line-height-lg); }
      &.lineHeightXl { height: var(--line-height-xl); }
      
      .lineHeightValue {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        font-size: var(--font-size-xs);
        color: var(--background);
        white-space: nowrap;
      }
    }
  }
}

@media screen and (max-width: 640px) {
  .page{
    .docs{
      .category{
        .variables {
          grid-template-columns: unset;
        }
    
        .typographyGrid {
          grid-template-columns: unset;        
        }
        
        .animationsGrid {
          grid-template-columns: unset;        
        }
      }
    }
  }
}