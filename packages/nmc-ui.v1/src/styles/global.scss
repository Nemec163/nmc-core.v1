@use './variables' as *;
@use './tools/toRem' as *;
@use 'sass:math';

// ========================================
// NMC UI Global Normalize
// ========================================

.nmc-ui {
  /* Base element resets */
  * {
    box-sizing: border-box;
    border: 0;
    outline: 0;
    padding: 0;
    margin: 0;

    // Typography base settings
    font-weight: 400;
    font-family: 'Nunito Sans', sans-serif;
    font-optical-sizing: auto;
    color: var(--text-primary);

    // Hide scrollbars (cross-browser)
    -ms-overflow-style: none;
    scrollbar-width: none;
    &::-webkit-scrollbar {
      display: none;
    }

    // Font smoothing
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  /* Responsive typography settings */
  * {
    // Default (for tablet and in-between sizes)
    font-size: if($useRem, 1vw, 16px);
  }
  
  // Desktop sizes
  @media screen and (min-width: $breakpoint-desktop) {
    * {
      font-size: if($useRem, $baseFontSize, 16px);
    }
  }
  
  // Mobile sizes
  @media screen and (max-width: $breakpoint-mobile) {
    * {
      font-size: if($useRem, #{math.div($baseFontSize * 100, 375)}vw, 16px);
    }
  }

  /* Remove number input spinner buttons */
  input[type="number"]::-webkit-inner-spin-button,
  input[type="number"]::-webkit-outer-spin-button {
    appearance: none;
    -webkit-appearance: none;
    margin: 0;
  }

  /* Link styling reset */
  a {
    color: inherit;
    text-decoration: none;
  }

  /* List styling */
  // Unordered lists
  ul {
    li {
      list-style: none;
      display: flex;
      
      &::before {
        content: '';
        display: inline-block;
        margin: 10px 5px 0 0;
        width: 5px;
        height: 5px;
        min-width: 5px;
        min-height: 5px;
        background-color: var(--text-primary);
        border-radius: var(--border-radius-full);
      }
    }
  }

  // Ordered lists
  ol {
    counter-reset: nmc-counter;

    li {
      list-style: none;
      display: flex;
      counter-increment: nmc-counter;
      
      &::before {
        content: counter(nmc-counter) '. ';
      }
    }
  }
}
